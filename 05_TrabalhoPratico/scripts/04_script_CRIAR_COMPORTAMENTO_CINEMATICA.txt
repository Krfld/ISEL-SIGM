--=============
-- Ligacao a BD
--=============
\set dataBase my_gis_ta
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================



----------------------------------------------------------
----------------------------------------------------------
-- Obter valores de 'cinematica' para um instante do tempo
----------------------------------------------------------
----------------------------------------------------------
DROP VIEW IF EXISTS v_novo_cinematica;
DROP FUNCTION IF EXISTS novo_posicao( geometry, t_velocidade, real );
DROP FUNCTION IF EXISTS novo_orientacao( real, t_velocidade, real );
DROP FUNCTION IF EXISTS novo_velocidade( t_velocidade, t_aceleracao, real );
----------------------------------------------------------


--____________________________________________________
-- Obter a nova posicao do objecto no instante 'tempo'
-- Formulacao:
-- return g_posicao + velocidade.linear * tempo
--____________________________________________________
CREATE OR REPLACE FUNCTION novo_posicao( g_posicao geometry, velocidade t_velocidade, tempo real )
RETURNS geometry
AS $$
SELECT 
ST_Translate( $1,
              (($2).linear * $3 ).x,
              (($2).linear * $3 ).y )
$$ LANGUAGE 'sql';


--_______________________________________________________
-- Obter a nova orientacao do objecto no instante 'tempo'
-- Formulacao:
-- return orientacao + velocidade.angular * tempo
--_______________________________________________________
CREATE OR REPLACE FUNCTION novo_orientacao( orientacao real, velocidade t_velocidade, tempo real )
RETURNS real
AS $$
DECLARE
    novo_orientacao real;
BEGIN
    novo_orientacao := orientacao + velocidade.angular * tempo;
    RETURN novo_orientacao;
END;
$$ LANGUAGE plpgsql;



--_______________________________________________________
-- Obter a nova velocidade do objecto no instante 'tempo'
-- Formulacao:
-- velocidade.linear + aceleracao.linear * tempo
-- velocidade.angular + aceleracao.angular * tempo
--_______________________________________________________
CREATE OR REPLACE FUNCTION novo_velocidade( velocidade t_velocidade, aceleracao t_aceleracao, tempo real )
RETURNS t_velocidade
AS $$
DECLARE
    novo_velocidade t_velocidade;
BEGIN
    novo_velocidade.linear := velocidade.linear + aceleracao.linear * tempo;
	novo_velocidade.angular := velocidade.angular + aceleracao.angular * tempo;
    RETURN novo_velocidade;
END;
$$ LANGUAGE plpgsql;


/*
--------------------------------------------------------------
--------------------------------------------------------------
-- Vista da 'cinematica' para um instante do tempo (e.g., 2)
--------------------------------------------------------------
--------------------------------------------------------------
DROP VIEW IF EXISTS v_novo_cinematica;
CREATE VIEW v_novo_cinematica AS
SELECT c.id AS id,
       novo_orientacao( c.orientacao, c.velocidade, 2 ) AS orientacao,
       novo_velocidade( c.velocidade, c.aceleracao, 2 ) AS velocidade,
       c.aceleracao,
       ST_AsText( novo_posicao( c.g_posicao, c.velocidade, 2 ) ) AS posicao_texto,
       novo_posicao( c.g_posicao, c.velocidade, 2 ) AS posicao
FROM cinematica c;

SELECT * FROM v_novo_cinematica;
-- resolucao: confrontar com os dados obtidos isoladamente por cada funcao (acima)
--=================================================================================
*/

