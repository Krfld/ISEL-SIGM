--=============
-- Ligação à BD
--=============
\set dataBase my_gis_ta
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================


do $$
begin
	for i in 1..100 loop

		INSERT INTO cinematica_hist
		SELECT nextval('cinematica_hist_id_hist_seq'), id, orientacao, velocidade , aceleracao, g_posicao
		FROM cinematica;


		UPDATE cinematica
		SET aceleracao = obter_aceleracao_perseguidor( pp.id_perseguidor, pp.id_alvo, o.boost )
		FROM pp, objecto_movel o
		WHERE cinematica.id = pp.id_perseguidor and o.id_cinematica = pp.id_perseguidor
		;


		UPDATE cinematica
		SET velocidade =
		CASE WHEN norma((c.velocidade).linear) > o.norma_vel_max * e.efeito
		THEN novo_velocidade( c.velocidade, ((normalizar((c.velocidade).linear) * -1) * o.boost * (1 - e.efeito)::real, (c.aceleracao).angular), 1 )
		ELSE
			CASE WHEN norma((novo_velocidade( c.velocidade, ((c.aceleracao).linear * e.efeito, (c.aceleracao).angular), 1 )).linear) > o.norma_vel_max * e.efeito
			THEN (
				normalizar((novo_velocidade( c.velocidade, ((c.aceleracao).linear * e.efeito, (c.aceleracao).angular), 1 )).linear) * o.norma_vel_max * e.efeito * 0.9,
				(novo_velocidade( c.velocidade, ((c.aceleracao).linear * e.efeito, (c.aceleracao).angular), 1 )).angular
			)::t_velocidade
			ELSE novo_velocidade( c.velocidade, ((c.aceleracao).linear * e.efeito, (c.aceleracao).angular), 1 )
			END
		END
		FROM cinematica c, objecto_movel o, efeito_obj e, terrenos_rios t, (
			SELECT c.id as id, max(t.nivel) as nivel
			FROM cinematica c, terrenos_rios t
			WHERE ST_Within(c.g_posicao, t.g_geo)
			GROUP BY c.id
		) as n
		WHERE
			n.id = c.id AND
			c.id = o.id_cinematica AND
			o.id = e.id_objeto AND
			ST_Within(c.g_posicao, t.g_geo) AND	
			t.id_tipo_terreno = e.id_tipo_terreno AND
			n.nivel = t.nivel AND
			cinematica.id = c.id
		;


		UPDATE cinematica
		SET g_posicao = novo_posicao( g_posicao, velocidade, 1 );


		UPDATE cinematica
		SET orientacao = novo_orientacao( orientacao, velocidade, 1 );


		UPDATE objecto_movel
		SET g_geo = ST_Translate(o.g_geo, ST_X(c.g_posicao) - ST_X(ST_Centroid(o.g_geo)), ST_Y(c.g_posicao) - ST_Y(ST_Centroid(o.g_geo)))
		FROM objecto_movel o, cinematica c
		WHERE o.id = c.id AND objecto_movel.id = o.id
		;

	end loop;
end; $$


