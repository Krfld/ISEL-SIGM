--#############
--# Paulo Trigo
--#############



--=============
-- Ligação à BD
--=============
\set dataBase my_gis_ta
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================


--------------------------------
-- Criar o Esquema Relacional
--------------------------------


DROP TABLE IF EXISTS gps_ponto;
DROP TABLE IF EXISTS terreno;
DROP TABLE IF EXISTS rio;
DROP TABLE IF EXISTS hierarquia;
DROP TABLE IF EXISTS tipo_terreno;
---------------------------------



---------------------------------
-- TIPO_TERRENO
---------------------------------
CREATE TABLE tipo_terreno (
	id_tipo_terreno varchar primary key
);




CREATE TABLE rio (
	id_rio int primary key,
	id_tipo_terreno varchar,
	nivel int,
	constraint fk_id_tipo_terreno foreign key (id_tipo_terreno) references tipo_terreno(id_tipo_terreno)
);
SELECT AddGeometryColumn( '', 'rio', 'g_rio', 0, 'LINESTRING', 2 );




---------------------------------
-- TERRENO
---------------------------------
CREATE TABLE terreno (
	id_terreno int primary key,
	id_tipo_terreno varchar,
	nivel int,
	constraint fk_id_tipo_terreno foreign key (id_tipo_terreno) references tipo_terreno(id_tipo_terreno)
);
SELECT AddGeometryColumn( '', 'terreno', 'g_terreno', 0, 'POLYGON', 2 );




---------------------------------
-- GPS_PONTO
---------------------------------
CREATE TABLE gps_ponto (
	id_ordem int,
	id_terreno int,
	constraint pk_gps_ponto primary key (id_ordem, id_terreno),
	constraint fk_id_terreno foreign key (id_terreno) references terreno(id_terreno)
);
SELECT AddGeometryColumn( '', 'gps_ponto', 'g_ponto', 0, 'POINT', 2 );


